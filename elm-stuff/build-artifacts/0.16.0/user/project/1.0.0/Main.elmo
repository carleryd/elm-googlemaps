Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values) return _elm.Main.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var update = F2(function (action,model) {
      var _p0 = action;
      switch (_p0.ctor)
      {case "NoOp": return model;
         case "IncreaseLat": return _U.update(model,
           {latitude: model.latitude + 1});
         case "DecreaseLat": return _U.update(model,
           {latitude: model.latitude - 1});
         case "IncreaseLng": return _U.update(model,
           {longitude: model.longitude + 1});
         default: return _U.update(model,
           {longitude: model.longitude - 1});}
   });
   var DecreaseLng = {ctor: "DecreaseLng"};
   var IncreaseLng = {ctor: "IncreaseLng"};
   var DecreaseLat = {ctor: "DecreaseLat"};
   var IncreaseLat = {ctor: "IncreaseLat"};
   var view = F2(function (address,initialModel) {
      return A2($Html.div,
      _U.list([$Html$Attributes.id("container")]),
      _U.list([$Html.text($Basics.toString(initialModel.latitude))
              ,A2($Html.button,
              _U.list([A2($Html$Events.onClick,address,IncreaseLat)]),
              _U.list([$Html.text("Lat +")]))
              ,A2($Html.button,
              _U.list([A2($Html$Events.onClick,address,DecreaseLat)]),
              _U.list([$Html.text("Lat -")]))
              ,$Html.text($Basics.toString(initialModel.longitude))
              ,A2($Html.button,
              _U.list([A2($Html$Events.onClick,address,IncreaseLng)]),
              _U.list([$Html.text("Lng +")]))
              ,A2($Html.button,
              _U.list([A2($Html$Events.onClick,address,DecreaseLng)]),
              _U.list([$Html.text("Lng -")]))]));
   });
   var NoOp = {ctor: "NoOp"};
   var inbox = $Signal.mailbox(NoOp);
   var actions = inbox.signal;
   var initialModel = {latitude: 40,longitude: 40};
   var model = A3($Signal.foldp,update,initialModel,actions);
   var modelChanges = Elm.Native.Port.make(_elm).outboundSignal("modelChanges",
   function (v) {
      return {latitude: v.latitude,longitude: v.longitude};
   },
   model);
   var main = A2($Signal.map,view(inbox.address),model);
   var Model = F2(function (a,b) {
      return {latitude: a,longitude: b};
   });
   return _elm.Main.values = {_op: _op
                             ,Model: Model
                             ,initialModel: initialModel
                             ,NoOp: NoOp
                             ,IncreaseLat: IncreaseLat
                             ,DecreaseLat: DecreaseLat
                             ,IncreaseLng: IncreaseLng
                             ,DecreaseLng: DecreaseLng
                             ,update: update
                             ,view: view
                             ,inbox: inbox
                             ,actions: actions
                             ,model: model
                             ,main: main};
};